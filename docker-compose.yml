version: "3"

services:
  app:
    build:
      context: ./front
      dockerfile: Dockerfile
    working_dir: /home/node/app
    volumes:
      - ./front/:/home/node/app
      - node_modules_volume:/home/node/app/node_modules
    
    command: [ "npm", "run", "dev", "--", "--host" ]

    stop_signal: SIGINT

  ngrok:
    image: ngrok/ngrok:latest
    restart: unless-stopped
    environment:
      - NGROK_CONFIG=/etc/ngrok.yml
    volumes:
      - ./ngrok.yml:/etc/ngrok.yml
    expose:
      - 443

  pg_database:
    container_name: "pg_database"
    image: postgres:13-alpine
    ports:
      - "5439:5432" # Change if you like! 5439 is external to container
    restart: always
    volumes:
      - pgdata:/var/lib/postgresql/data
    command: "postgres -c max_connections=150
               -c shared_buffers=512MB -c effective_cache_size=1536MB
               -c maintenance_work_mem=128MB -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
               -c default_statistics_target=100 -c random_page_cost=1.1 -c effective_io_concurrency=200
               -c work_mem=3495kB -c min_wal_size=1GB -c max_wal_size=4GB -c max_worker_processes=2
               -c max_parallel_workers_per_gather=1 -c max_parallel_workers=2 -c max_parallel_maintenance_workers=1"
    env_file:
      - '.env'
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

  api:
    container_name: "api"
    stop_signal: SIGINT
    build:
      context: .backend
      dockerfile: api.Dockerfile
    working_dir: "/usr/src/app/api"
    volumes:
      - .:/usr/src/app/api
    command: [ "uvicorn", "backend.infrastructure.api.app:app", "--host", "0.0.0.0", "--port", "8000" ]
    restart: always
    env_file:
      - ".env"
    logging:
      driver: "json-file"
      options:
        max-size: "200k"
        max-file: "10"

volumes:
  node_modules_volume:
  pgdata: